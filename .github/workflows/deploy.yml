name: 🚀 Deploy Call Centre CRM

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4

      - name: 📂 Setup Project Directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_SSH_PORT || 22 }}
          script: |
            # Create project directory
            mkdir -p /opt/callcentre-crm
            cd /opt/callcentre-crm
            
            # Clone repository if not exists
            if [ ! -d ".git" ]; then
              git clone https://github.com/jes11sy/callcentre.git .
            fi
            
            # Set proper permissions
            chown -R $USER:$USER /opt/callcentre-crm

      - name: 🚀 Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_SSH_PORT || 22 }}
          script: |
            # Navigate to project directory
            cd /opt/callcentre-crm
            
            # Pull latest changes
            git pull origin main
            
            # Stop running containers
            docker-compose -f docker-compose.prod.yml down || true
            
            # Remove old images to free up space
            docker image prune -af
            docker builder prune -af
            
            # Create .env file for docker-compose
            cat > .env << 'EOF'
            DATABASE_URL=postgresql://gen_user:j7X_S9mznbdGHc9P@5.129.247.54:5432/default_db
            JWT_SECRET=ff1ebf6b64951141ff4d0a4de1999b284e077eef9a4cc3c1d68e4cad222b4f7b
            REDIS_URL=redis://redis:6379
            NODE_ENV=production
            SSL_ENABLED=false
            EOF
            
            # Build and start new containers
            docker-compose -f docker-compose.prod.yml up -d --build
            
            # Wait for services to be ready
            sleep 45
            
            # Health check with retry
            for i in {1..12}; do
              if curl -f http://localhost:80/health 2>/dev/null; then
                echo "Health check passed"
                break
              fi
              echo "Health check attempt $i failed, retrying in 10 seconds..."
              sleep 10
            done
            
            # Log deployment
            mkdir -p /var/log/callcentre
            echo "Deployment completed at $(date)" >> /var/log/callcentre/deployments.log

      - name: ✅ Verify Deployment
        run: |
          # Wait a bit for services to fully start
          sleep 30
          
          # Check by IP since SSL might not be ready
          if curl -f http://92.51.22.226; then
            echo "✅ Frontend is responding"
          else
            echo "❌ Frontend health check failed"
            exit 1
          fi
          
          # Check backend health endpoint by IP  
          if curl -f http://92.51.22.226/health; then
            echo "✅ Backend API is responding"
          else
            echo "❌ Backend API health check failed"
            exit 1
          fi

      - name: 📝 Log Deployment Success
        if: success()
        run: |
          echo "✅ Call Centre CRM успешно развернут!"
          echo "🌍 Frontend: https://callcentre.lead-schem.ru"
          echo "🔧 Backend: https://apikc.lead-schem.ru"
          echo "📊 Health: https://apikc.lead-schem.ru/health"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.actor }}"
          echo "🏷️ Branch: ${{ github.ref_name }}"

      - name: 📝 Log Deployment Failure
        if: failure()
        run: |
          echo "❌ Развертывание Call Centre CRM ПРОВАЛИЛОСЬ!"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.actor }}"
          echo "🏷️ Branch: ${{ github.ref_name }}"
          echo "🔗 Logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"