# Call Centre CRM - Nginx Staging Configuration

# Rate limiting zones (more relaxed for staging)
limit_req_zone $binary_remote_addr zone=staging_api:10m rate=50r/s;
limit_req_zone $binary_remote_addr zone=staging_auth:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=staging_upload:10m rate=10r/s;

# Redirect HTTP to HTTPS - Staging Backend API
server {
    listen 80;
    server_name staging-api.lead-schem.ru;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# Redirect HTTP to HTTPS - Staging Frontend
server {
    listen 80;
    server_name staging.callcentre.lead-schem.ru;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS Configuration - Staging Backend API
server {
    listen 443 ssl http2;
    server_name staging-api.lead-schem.ru;

    # SSL Configuration
    ssl_certificate /etc/ssl/certs/callcentre/certificate.crt;
    ssl_certificate_key /etc/ssl/certs/callcentre/private.key;
    ssl_trusted_certificate /etc/ssl/certs/callcentre/ca_bundle.crt;

    # SSL Security Settings (relaxed for staging)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers for Staging API (with debug info)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Access-Control-Allow-Origin "https://staging.callcentre.lead-schem.ru" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header X-Environment "staging" always;
    add_header X-Debug-Mode "enabled" always;

    # Hide Nginx version
    server_tokens off;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Client upload limit (larger for staging)
    client_max_body_size 100M;

    # Logging (more verbose for staging)
    access_log /var/log/nginx/staging-api-access.log combined;
    error_log /var/log/nginx/staging-api-error.log debug;

    # API Routes (–≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ backend)
    location / {
        # Rate limiting for API (more relaxed)
        limit_req zone=staging_api burst=100 nodelay;
        
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header X-Environment "staging";
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300;
        
        # CORS headers for preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://staging.callcentre.lead-schem.ru' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Authentication endpoints with rate limiting
    location ~ ^/(auth|login|logout) {
        limit_req zone=staging_auth burst=50 nodelay;
        
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header X-Environment "staging";
        proxy_read_timeout 30;
    }

    # File uploads with relaxed rate limiting
    location ~ ^/.*/(upload|recordings) {
        limit_req zone=staging_upload burst=20 nodelay;
        
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header X-Environment "staging";
        proxy_read_timeout 600;
        proxy_send_timeout 600;
    }

    # Debug endpoints (staging only)
    location /debug {
        proxy_pass http://backend:5000;
        proxy_set_header X-Environment "staging";
        proxy_set_header X-Debug-Enabled "true";
        
        # Allow access only from specific IPs (optional)
        # allow 192.168.1.0/24;
        # deny all;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://backend:5000/health;
        access_log off;
        proxy_set_header X-Environment "staging";
    }

    # Robots.txt (prevent indexing)
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
        access_log off;
    }
}

# HTTPS Configuration - Staging Frontend
server {
    listen 443 ssl http2;
    server_name staging.callcentre.lead-schem.ru;

    # SSL Configuration (same as backend)
    ssl_certificate /etc/ssl/certs/callcentre/certificate.crt;
    ssl_certificate_key /etc/ssl/certs/callcentre/private.key;
    ssl_trusted_certificate /etc/ssl/certs/callcentre/ca_bundle.crt;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers for Staging Frontend
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://staging-api.lead-schem.ru wss://staging-api.lead-schem.ru https://api.avito.ru; media-src 'self'; frame-ancestors 'none';" always;
    add_header X-Environment "staging" always;
    add_header X-Debug-Mode "enabled" always;

    # Hide Nginx version
    server_tokens off;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Client upload limit
    client_max_body_size 50M;

    # Logging (verbose for staging)
    access_log /var/log/nginx/staging-frontend-access.log combined;
    error_log /var/log/nginx/staging-frontend-error.log info;

    # Frontend (Next.js)
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header X-Environment "staging";
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    # Static files (less aggressive caching for staging)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1h;  # Shorter cache time for staging
        add_header Cache-Control "public, must-revalidate";
        add_header X-Environment "staging" always;
        
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
    }

    # Next.js specific paths
    location /_next/ {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Environment "staging";
        expires 1h;
    }

    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|log|config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Robots.txt (prevent indexing)
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
        access_log off;
    }

    # Staging banner (optional)
    location /staging-banner.js {
        add_header Content-Type application/javascript;
        return 200 '
            console.log("%cüöß STAGING ENVIRONMENT üöß", "color: orange; font-size: 16px; font-weight: bold;");
            if (typeof document !== "undefined") {
                const banner = document.createElement("div");
                banner.innerHTML = "üöß STAGING ENVIRONMENT üöß";
                banner.style.cssText = "position:fixed;top:0;left:0;right:0;background:orange;color:black;text-align:center;padding:5px;z-index:9999;font-weight:bold;";
                document.body?.appendChild(banner);
            }
        ';
    }
}

# WebSocket upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
