version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: callcentre-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - callcentre-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: callcentre-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      SSL_ENABLED: true
      SSL_CERT_DIR: /etc/ssl/certs/callcentre
      HTTPS_PORT: 443
      HTTP_PORT: 80
      BACKEND_DOMAIN: apikc.lead-schem.ru
      FRONTEND_DOMAIN: callcentre.lead-schem.ru
      FRONTEND_URL: https://callcentre.lead-schem.ru
      MANGO_WEBHOOK_URL: https://apikc.lead-schem.ru/api/webhooks/mango
    volumes:
      - ./ssl:/etc/ssl/certs/callcentre:ro
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    # Backend внутренний порт, без внешнего доступа
    expose:
      - "5000"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - callcentre-network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: callcentre-frontend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://apikc.lead-schem.ru
      NEXT_PUBLIC_SOCKET_URL: wss://apikc.lead-schem.ru
      NEXT_PUBLIC_FRONTEND_DOMAIN: callcentre.lead-schem.ru
      NEXT_PUBLIC_BACKEND_DOMAIN: apikc.lead-schem.ru
    # Frontend внутренний порт, проксируется через nginx
    expose:
      - "3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - callcentre-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: callcentre-nginx
    volumes:
      - ./config/nginx/callcentre-crm.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs/callcentre:ro
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - callcentre-network

volumes:
  redis_data:
  backend_uploads:
  backend_logs:

networks:
  callcentre-network:
    driver: bridge
